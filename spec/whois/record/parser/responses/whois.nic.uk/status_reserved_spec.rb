# encoding: utf-8

# This file is autogenerated. Do not edit it manually.
# If you want change the content of this file, edit
#
#   /spec/fixtures/responses/whois.nic.uk/status_reserved.expected
#
# and regenerate the tests with the following rake task
#
#   $ rake spec:generate
#

require 'spec_helper'
require 'whois/record/parser/whois.nic.uk.rb'

describe Whois::Record::Parser::WhoisNicUk, "status_reserved.expected" do

  subject do
    file = fixture("responses", "whois.nic.uk/status_reserved.txt")
    part = Whois::Record::Part.new(:body => File.read(file))
    described_class.new(part)
  end

  describe "#status" do
    it do
      subject.status.should == :reserved
    end
  end
  describe "#available?" do
    it do
      subject.available?.should == false
    end
  end
  describe "#registered?" do
    it do
      subject.registered?.should == true
    end
  end
  describe "#created_on" do
    it do
      subject.created_on.should be_a(Time)
      subject.created_on.should == Time.parse("1996-08-01")
    end
  end
  describe "#updated_on" do
    it do
      subject.updated_on.should be_a(Time)
      subject.updated_on.should == Time.parse("2012-03-23")
    end
  end
  describe "#expires_on" do
    it do
      subject.expires_on.should == nil
    end
  end
  describe "#registrar" do
    it do
      subject.registrar.should be_a(Whois::Record::Registrar)
      subject.registrar.id.should           == nil
      subject.registrar.name.should         == "Nominet"
      subject.registrar.organization.should == "Nominet UK"
      subject.registrar.url.should          == "http://www.nic.uk/"
    end
  end
  describe "#registrant_contacts" do
    it do
      subject.registrant_contacts.should be_a(Array)
      subject.registrant_contacts.should have(1).items
      subject.registrant_contacts[0].should be_a(Whois::Record::Contact)
      subject.registrant_contacts[0].type.should         == Whois::Record::Contact::TYPE_REGISTRANT
      subject.registrant_contacts[0].id.should           == nil
      subject.registrant_contacts[0].name.should         == "Nominet UK"
      subject.registrant_contacts[0].organization.should == nil
      subject.registrant_contacts[0].address.should      == "Minerva House, Edmund Halley Road\nOxford Science Park"
      subject.registrant_contacts[0].city.should         == "Oxford"
      subject.registrant_contacts[0].zip.should          == "OX4 4DQ"
      subject.registrant_contacts[0].state.should        == "Oxon"
      subject.registrant_contacts[0].country.should      == "United Kingdom"
    end
  end
  describe "#nameservers" do
    it do
      subject.nameservers.should be_a(Array)
      subject.nameservers.should have(3).items
      subject.nameservers[0].should be_a(Whois::Record::Nameserver)
      subject.nameservers[0].name.should == "nom-ns1.nominet.org.uk"
      subject.nameservers[0].ipv4.should == "213.248.199.16"
      subject.nameservers[0].ipv6.should == nil
      subject.nameservers[1].should be_a(Whois::Record::Nameserver)
      subject.nameservers[1].name.should == "nom-ns2.nominet.org.uk"
      subject.nameservers[1].ipv4.should == "195.66.240.250"
      subject.nameservers[1].ipv6.should == "2a01:40:1001:37::2"
      subject.nameservers[2].should be_a(Whois::Record::Nameserver)
      subject.nameservers[2].name.should == "nom-ns3.nominet.org.uk"
      subject.nameservers[2].ipv4.should == "213.219.13.194"
      subject.nameservers[2].ipv6.should == nil
    end
  end
  describe "#response_throttled?" do
    it do
      subject.response_throttled?.should == false
    end
  end
  describe "#valid?" do
    it do
      subject.valid?.should == true
    end
  end
  describe "#invalid?" do
    it do
      subject.invalid?.should == false
    end
  end
end
